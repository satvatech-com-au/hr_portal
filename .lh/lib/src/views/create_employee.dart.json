{
    "sourceFile": "lib/src/views/create_employee.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1699439845214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1699439895624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,41 +26,16 @@\n   String? _selectedTeam;\n \n   TabController? _tabController;\n \n-  Widget _buildDropdownField({\n-    required String name,\n-    required String labelText,\n-  }) {\n-    return Container(\n-      margin: const EdgeInsets.only(bottom: 16.0),\n-      child: FormBuilderDropdown(\n-        onChanged: (value) {\n-          setState(() {\n-            _selectedTeam = value;\n-          });\n-        },\n-        name: name,\n-        decoration: InputDecoration(\n-          labelText: labelText,\n-          border: const OutlineInputBorder(),\n-        ),\n-        items: [\n-          'Engineering',\n-          'UI/UX Design',\n-          'Finance',\n-          'Marketing',\n-          'Sales',\n-          'Human Resource'\n-        ]\n-            .map((team) => DropdownMenuItem(\n-                  value: team,\n-                  child: Text(team),\n-                ))\n-            .toList(),\n-      ),\n-    );\n-  }\n+  final _teamsList = [\n+    'Engineering',\n+    'UI/UX Design',\n+    'Finance',\n+    'Marketing',\n+    'Sales',\n+    'Human Resource'\n+  ];\n \n   final dateController = TextEditingController();\n   DateTime? selectedDate;\n   Future<void> _selectDate(BuildContext context) async {\n@@ -132,16 +107,9 @@\n                   decoration: const InputDecoration(\n                     labelText: 'Team',\n                     border: OutlineInputBorder(),\n                   ),\n-                  items: [\n-                    'Engineering',\n-                    'UI/UX Design',\n-                    'Finance',\n-                    'Marketing',\n-                    'Sales',\n-                    'Human Resource'\n-                  ]\n+                  items: _teamsList\n                       .map((team) => DropdownMenuItem(\n                             value: team,\n                             child: Text(team),\n                           ))\n"
                },
                {
                    "date": 1699440042396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,21 +11,18 @@\n class _CreateMemberScreenState extends State<CreateMemberScreen>\n     with SingleTickerProviderStateMixin {\n   final GlobalKey<FormBuilderState> _employmentDetailsFormKey =\n       GlobalKey<FormBuilderState>();\n-  final GlobalKey<FormBuilderState> _contactFormKey =\n-      GlobalKey<FormBuilderState>();\n-  final GlobalKey<FormBuilderState> _compensationFormKey =\n-      GlobalKey<FormBuilderState>();\n \n+\n   final TextEditingController _nameController = TextEditingController();\n   final TextEditingController _roleController = TextEditingController();\n   final TextEditingController _yearsController = TextEditingController();\n   final TextEditingController _phoneController = TextEditingController();\n   final TextEditingController _emailController = TextEditingController();\n \n-  String? _selectedTeam;\n \n+\n   TabController? _tabController;\n \n   final _teamsList = [\n     'Engineering',\n"
                }
            ],
            "date": 1699439845214,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:flutter_form_builder/flutter_form_builder.dart';\n\nclass CreateMemberScreen extends StatefulWidget {\n  const CreateMemberScreen({Key? key}) : super(key: key);\n\n  @override\n  _CreateMemberScreenState createState() => _CreateMemberScreenState();\n}\n\nclass _CreateMemberScreenState extends State<CreateMemberScreen>\n    with SingleTickerProviderStateMixin {\n  final GlobalKey<FormBuilderState> _employmentDetailsFormKey =\n      GlobalKey<FormBuilderState>();\n  final GlobalKey<FormBuilderState> _contactFormKey =\n      GlobalKey<FormBuilderState>();\n  final GlobalKey<FormBuilderState> _compensationFormKey =\n      GlobalKey<FormBuilderState>();\n\n  final TextEditingController _nameController = TextEditingController();\n  final TextEditingController _roleController = TextEditingController();\n  final TextEditingController _yearsController = TextEditingController();\n  final TextEditingController _phoneController = TextEditingController();\n  final TextEditingController _emailController = TextEditingController();\n\n  String? _selectedTeam;\n\n  TabController? _tabController;\n\n  Widget _buildDropdownField({\n    required String name,\n    required String labelText,\n  }) {\n    return Container(\n      margin: const EdgeInsets.only(bottom: 16.0),\n      child: FormBuilderDropdown(\n        onChanged: (value) {\n          setState(() {\n            _selectedTeam = value;\n          });\n        },\n        name: name,\n        decoration: InputDecoration(\n          labelText: labelText,\n          border: const OutlineInputBorder(),\n        ),\n        items: [\n          'Engineering',\n          'UI/UX Design',\n          'Finance',\n          'Marketing',\n          'Sales',\n          'Human Resource'\n        ]\n            .map((team) => DropdownMenuItem(\n                  value: team,\n                  child: Text(team),\n                ))\n            .toList(),\n      ),\n    );\n  }\n\n  final dateController = TextEditingController();\n  DateTime? selectedDate;\n  Future<void> _selectDate(BuildContext context) async {\n    final DateTime picked = (await showDatePicker(\n      context: context,\n      initialDate: selectedDate ?? DateTime.now(),\n      firstDate: DateTime(2000),\n      lastDate: DateTime(2101),\n    ))!;\n\n    if (picked != selectedDate) {\n      setState(() {\n        selectedDate = picked;\n        dateController.text = \"${picked.year}-${picked.month}-${picked.day}\";\n      });\n    }\n  }\n\n  @override\n  void initState() {\n    super.initState();\n    _tabController = TabController(length: 3, vsync: this);\n  }\n\n  @override\n  void dispose() {\n    _nameController.dispose();\n    _roleController.dispose();\n    _yearsController.dispose();\n    _phoneController.dispose();\n    _emailController.dispose();\n    _tabController?.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text('Add New Employee'),\n      ),\n      body: Padding(\n        padding: const EdgeInsets.all(16.0),\n        child: FormBuilder(\n          key: _employmentDetailsFormKey,\n          child: Column(\n            children: <Widget>[\n              const CustomTextField(\n                name: 'employeeName',\n                labelText: 'Employee name',\n              ),\n              const CustomTextField(\n                name: 'employeeId',\n                labelText: 'Employee ID',\n              ),\n              const CustomTextField(\n                name: 'jobTitle',\n                labelText: 'Job Title',\n              ),\n              Container(\n      margin: const EdgeInsets.only(bottom: 16.0),\n      child: FormBuilderDropdown(\n        onChanged: (value) {\n          setState(() {\n            _selectedTeam = value;\n          });\n        },\n        name: 'team',\n        decoration: InputDecoration(\n          labelText: 'Team',\n          border: const OutlineInputBorder(),\n        ),\n        items: [\n          'Engineering',\n          'UI/UX Design',\n          'Finance',\n          'Marketing',\n          'Sales',\n          'Human Resource'\n        ]\n            .map((team) => DropdownMenuItem(\n                  value: team,\n                  child: Text(team),\n                ))\n            .toList(),\n      ),\n    ),\n              const CustomTextField(\n                name: 'reportingManager',\n                labelText: 'Reporting Manager',\n              ),\n              TextFormField(\n                controller: dateController,\n                decoration: const InputDecoration(\n                  labelText: 'Date of hire',\n                  border: OutlineInputBorder(),\n                ),\n                onTap: () => _selectDate(context),\n              ),\n              const SizedBox(\n                height: 16,\n              ),\n              const CustomTextField(\n                name: 'employmentType',\n                labelText: 'Employment Type',\n              ),\n              const SizedBox(\n                height: 40,\n              ),\n              ElevatedButton(onPressed: () {}, child: const Text('Send link'))\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass CustomTextField extends StatelessWidget {\n  final String name;\n  final String labelText;\n  final TextEditingController? controller;\n  final TextInputType keyboardType;\n\n  const CustomTextField({\n    super.key,\n    required this.name,\n    required this.labelText,\n    this.controller,\n    this.keyboardType = TextInputType.text,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      margin: const EdgeInsets.only(bottom: 16.0),\n      child: FormBuilderTextField(\n        name: name,\n        decoration: InputDecoration(\n          labelText: labelText,\n          border: const OutlineInputBorder(),\n        ),\n        keyboardType: keyboardType,\n        controller: controller,\n      ),\n    );\n  }\n}\n"
        }
    ]
}